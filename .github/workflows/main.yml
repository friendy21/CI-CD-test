name: CI/CD Pipeline

# When this workflow runs
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Environment variables
env:
  REGISTRY: docker.io
  IMAGE_NAME: friendy21/cicd-nomad-app

jobs:
  # Job 1: Build and Push to Docker Hub
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Checkout code from repository
    - name: Checkout code
      uses: actions/checkout@v4
      
    # Step 2: Set up Docker Buildx for multi-platform builds
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    # Step 3: Login to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    
    # Step 4: Extract metadata for tagging
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=latest,enable={{is_default_branch}}
          type=sha,prefix={{branch}}-
    
    # Step 5: Build and push Docker image
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    # Step 6: Output image digest
    - name: Image digest
      run: echo "Image pushed with digest ${{ steps.meta.outputs.digest }}"

  # Job 2: Deploy to DigitalOcean Droplet
  deploy:
    name: Deploy to Production
    needs: build-and-push  # Only run after build succeeds
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    # Deploy to DigitalOcean Droplet via SSH
    - name: Deploy to DigitalOcean Droplet
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: root
        key: ${{ secrets.DROPLET_SSH_KEY }}
        port: 22
        script: |
          echo "🚀 Starting deployment..."
          
          # Login to Docker Hub
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          
          # Pull the latest image
          echo "📦 Pulling latest Docker image..."
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          
          # Stop existing container if running
          echo "🛑 Stopping existing container..."
          docker stop app-container 2>/dev/null || true
          docker rm app-container 2>/dev/null || true
          
          # Run new container
          echo "🏃 Starting new container..."
          docker run -d \
            --name app-container \
            --restart unless-stopped \
            -p 80:3000 \
            -e NODE_ENV=production \
            -e PORT=3000 \
            --memory="512m" \
            --cpus="0.5" \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          
          # Wait for container to be healthy
          echo "⏳ Waiting for container to be healthy..."
          sleep 5
          
          # Check if container is running
          if docker ps | grep -q app-container; then
            echo "✅ Deployment successful!"
            docker ps | grep app-container
          else
            echo "❌ Deployment failed!"
            docker logs app-container
            exit 1
          fi
          
          # Clean up old images
          echo "🧹 Cleaning up old images..."
          docker image prune -af --filter "until=24h"
          
          echo "🎉 Deployment complete!"
